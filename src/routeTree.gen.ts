/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminUsersRouteImport } from './routes/adminUsers'
import { Route as AboutRouteImport } from './routes/about'
import { Route as RegisterRouteImport } from './routes/Register'
import { Route as IndexRouteImport } from './routes/index'

const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/adminUsers',
  path: '/adminUsers',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/Register',
  path: '/Register',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Register': typeof RegisterRoute
  '/about': typeof AboutRoute
  '/adminUsers': typeof AdminUsersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Register': typeof RegisterRoute
  '/about': typeof AboutRoute
  '/adminUsers': typeof AdminUsersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Register': typeof RegisterRoute
  '/about': typeof AboutRoute
  '/adminUsers': typeof AdminUsersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/Register' | '/about' | '/adminUsers'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/Register' | '/about' | '/adminUsers'
  id: '__root__' | '/' | '/Register' | '/about' | '/adminUsers'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RegisterRoute: typeof RegisterRoute
  AboutRoute: typeof AboutRoute
  AdminUsersRoute: typeof AdminUsersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/adminUsers': {
      id: '/adminUsers'
      path: '/adminUsers'
      fullPath: '/adminUsers'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Register': {
      id: '/Register'
      path: '/Register'
      fullPath: '/Register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RegisterRoute: RegisterRoute,
  AboutRoute: AboutRoute,
  AdminUsersRoute: AdminUsersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
